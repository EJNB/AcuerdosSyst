## To get started with security, check out the documentation:
## https://symfony.com/doc/current/security.html
#security:
#
#    # https://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded
#    providers:
#        in_memory:
#            memory: ~
#
#    firewalls:
#        # disables authentication for assets and the profiler, adapt it according to your needs
#        dev:
#            pattern: ^/(_(profiler|wdt)|css|images|js)/
#            security: false
#
#        main:
#            anonymous: ~
#            # activate different ways to authenticate
#
#            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate
#            #http_basic: ~
#
#            # https://symfony.com/doc/current/security/form_login_setup.html
#            #form_login: ~

# you can read more about security in the related section of the documentation
# http://symfony.com/doc/current/book/security.html
security:
    # http://symfony.com/doc/current/book/security.html#encoding-the-user-s-password
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext

        Acuerdos\SeguridadBundle\Entity\User:
            algorithm: sha512
            encode-as-base64: false
            iterations: 10

    # http://symfony.com/doc/current/book/security.html#hierarchical-roles
    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
#        in_memory:
#            memory:
#                users:
#                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
#                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }

        acuerdos_provider:
            entity: { class: AcuerdosSeguridadBundle:User, property: username }

    # the main part of the security, where you can set up firewalls
    # for specific sections of your app
    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        # the login page has to be accessible for everybody
        demo_login:
            pattern:  ^/demo/secured/login$
            security: false

        # secures part of the application
        demo_secured_area:
            pattern:    ^/demo/secured/
            # it's important to notice that in this case _demo_security_check and _demo_login
            # are route names and that they are specified in the AcmeDemoBundle
            form_login:
                check_path: _demo_security_check
                login_path: _demo_login
            logout:
                path:   _demo_logout
                target: _demo
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

        acuerdos_secured_area:
            pattern:  ^/
            anonymous: ~
#            provider: in_memory
#            http_basic:
#                realm: "Introduzca Usuario y Contrase√±a"
            form_login:
                login_path: acuerdos_seguridad_login
                check_path: acuerdos_seguridad_login_check
                default_target_path: /
                always_use_default_target_path: true

            logout:
                path: acuerdos_seguridad_logout
                target: acuerdos_seguridad_login

    # with these settings you can restrict or allow access for different parts
    # of your application based on roles, ip, host or methods
    # http://symfony.com/doc/current/book/security.html#security-book-access-control-matching-options
    access_control:
#        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
#        - { path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/Seguridad/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/Seguridad/users/changepassuser, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/Gestion, roles: ROLE_ACUERDOS_ORG }
        - { path: ^/Seguridad, roles: ROLE_ACUERDOS_ADMIN }
        - { path: ^/, roles: IS_AUTHENTICATED_FULLY }
