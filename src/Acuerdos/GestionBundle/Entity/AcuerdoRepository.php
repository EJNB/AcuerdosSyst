<?php

namespace Acuerdos\GestionBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * AcuerdoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AcuerdoRepository extends EntityRepository
{

    public function  countForAdminList($filter) {
        $em = $this->getEntityManager();
        $query = $em->createQueryBuilder();

        $query->select($query->expr()->count('t1'))
            ->from('AcuerdosGestionBundle:Acuerdo', 't1');

        if ($filter != "") {
            $query->where($query->expr()->like('t1.idAcuerdo', '?1'))
                ->orWhere($query->expr()->like('t1.descripcion', '?1'))
                ->orWhere($query->expr()->like('t1.fechaCreacion', '?1'))
                ->orWhere($query->expr()->like('t1.fechaCumplimientoIndicada', '?1'))
                ->orWhere($query->expr()->like('t1.fechaCumplimientoReal', '?1'))
                ->orWhere($query->expr()->like('t1.accionesSeguimiento', '?1'))
                ->orWhere($query->expr()->like('t1.observaciones', '?1'))
                ->setParameter(1, '%' . $filter . '%')
            ;
        }

        return $query->getQuery()->getSingleScalarResult();
    }

    public function findAcuerdosCompletos($column, $order, $filter, $first_result, $max_result){

        $em = $this->getEntityManager();
        $query = $em->createQueryBuilder();
        $query2 = $em->createQueryBuilder();

        $query->select('t1, t2')
            ->from('AcuerdosGestionBundle:Acuerdo', 't1')
            ->innerJoin('t1.idProcedencia', 't2')
            ->orderBy('t1.' . $column, $order)
            ->setFirstResult($first_result)->setMaxResults($max_result);

        if ($filter != "") {
            $query->where($query->expr()->like('t1.idAcuerdo', '?1'))
                ->orWhere($query->expr()->like('t1.descripcion', '?1'))
                ->orWhere($query->expr()->like('t1.fechaCreacion', '?1'))
                ->orWhere($query->expr()->like('t1.fechaCumplimientoIndicada', '?1'))
                ->orWhere($query->expr()->like('t1.fechaCumplimientoReal', '?1'))
                ->orWhere($query->expr()->like('t1.accionesSeguimiento', '?1'))
                ->orWhere($query->expr()->like('t1.observaciones', '?1'))
                ->setParameter(1, '%' . $filter . '%')
            ;
        }

        ;
        $acuerdos = $query->getQuery()->getResult();

        $query2->select('t3, t4')
            ->from('AcuerdosGestionBundle:AcuerdoPersona', 't3')
            ->innerJoin('t3.idPersona','t4')
        ;

        $listaacuerdopersona = new \Doctrine\Common\Collections\ArrayCollection();

        for ($i=0; $i<sizeof($acuerdos); $i++){
            $acuerdopersona = new StrAcuerdoPersona();
            $acuerdopersona->setAcuerdo($acuerdos[$i]);

            $query2->where('t3.idAcuerdo = :ID')
                ->setParameter('ID', $acuerdos[$i]->getId());
            $personas = $query2->getQuery()->getResult();
            $acuerdopersona->setPersonas($personas);
            $listaacuerdopersona[$i] = $acuerdopersona;

        }

        return $listaacuerdopersona;
    }


    public function countAcuerdosCompletosReporte($idProc,$filter_text, $filter_state, $filter_start_indic, $filter_end_indic, $filter_start_real,$filter_end_real){

        $em = $this->getEntityManager();
        $query = $em->createQueryBuilder();

        $query->select($query->expr()->count('t1'))
            ->from('AcuerdosGestionBundle:Acuerdo', 't1')
            ->innerJoin('t1.idProcedencia', 't2')
            ->where('t1.idProcedencia = :IDPROC')
            ->setParameter('IDPROC',$idProc)
        ;

        if($filter_text != ""){
            $query->andWhere($query->expr()->like('t1.descripcion', ':FILTROTEXT'))
                ->orWhere($query->expr()->like('t1.idAcuerdo', ':FILTROTEXT'))
                ->orWhere($query->expr()->like('t1.accionesSeguimiento', ':FILTROTEXT'))
                ->orWhere($query->expr()->like('t1.observaciones', ':FILTROTEXT'))
                ->setParameter('FILTROTEXT', '%'.$filter_text.'%')
            ;
        }
        if($filter_state != ""){
            $query->andWhere('t1.estado = :FILTROSTATE')
                ->setParameter('FILTROSTATE', $filter_state)
            ;
        }
        if($filter_start_indic != ""){
            $query->andWhere('t1.fechaCumplimientoIndicada >= :FILTROSTARTINDIC')
                ->setParameter('FILTROSTARTINDIC', $filter_start_indic)
            ;
        }
        if($filter_end_indic != ""){
            $query->andWhere('t1.fechaCumplimientoIndicada <= :FILTROENDINDIC')
                ->setParameter('FILTROENDINDIC', $filter_end_indic)
            ;
        }
        if($filter_start_real != ""){
            $query->andWhere('t1.fechaCumplimientoReal >= :FILTROSTARTREAL')
                ->setParameter('FILTROSTARTREAL', $filter_start_real)
            ;
        }
        if($filter_end_real != ""){
            $query->andWhere('t1.fechaCumplimientoReal <= :FILTROENDREAL')
                ->setParameter('FILTROENDREAL', $filter_end_real)
            ;
        }

        return $query->getQuery()->getSingleScalarResult();

    }


    public function findAcuerdosCompletosReporte($idProc,$filter_text, $filter_state, $filter_start_indic,
                                                 $filter_end_indic, $filter_start_real,$filter_end_real,$column,
                                                 $order){

        $em = $this->getEntityManager();
        $query = $em->createQueryBuilder();
        $query2 = $em->createQueryBuilder();

        $query->select('t1, t2')
            ->from('AcuerdosGestionBundle:Acuerdo', 't1')
            ->innerJoin('t1.idProcedencia', 't2')
            ->where('t1.idProcedencia = :IDPROC')
            ->orderBy('t1.' . $column, $order)
            ->setParameter('IDPROC',$idProc)
        ;

        if($filter_text != ""){
            $query->andWhere($query->expr()->like('t1.descripcion', ':FILTROTEXT'))
                ->orWhere($query->expr()->like('t1.idAcuerdo', ':FILTROTEXT'))
                ->orWhere($query->expr()->like('t1.accionesSeguimiento', ':FILTROTEXT'))
                ->orWhere($query->expr()->like('t1.observaciones', ':FILTROTEXT'))
                ->setParameter('FILTROTEXT', '%'.$filter_text.'%')
            ;
        }
        if($filter_state != ""){
            $query->andWhere('t1.estado = :FILTROSTATE')
                ->setParameter('FILTROSTATE', $filter_state)
            ;
        }
        if($filter_start_indic != ""){
            $query->andWhere('t1.fechaCumplimientoIndicada >= :FILTROSTARTINDIC')
                ->setParameter('FILTROSTARTINDIC', $filter_start_indic)
            ;
        }
        if($filter_end_indic != ""){
            $query->andWhere('t1.fechaCumplimientoIndicada <= :FILTROENDINDIC')
                ->setParameter('FILTROENDINDIC', $filter_end_indic)
            ;
        }
        if($filter_start_real != ""){
            $query->andWhere('t1.fechaCumplimientoReal >= :FILTROSTARTREAL')
                ->setParameter('FILTROSTARTREAL', $filter_start_real)
            ;
        }
        if($filter_end_real != ""){
            $query->andWhere('t1.fechaCumplimientoReal <= :FILTROENDREAL')
                ->setParameter('FILTROENDREAL', $filter_end_real)
            ;
        }



        $acuerdos = $query->getQuery()->getResult();

        $query2->select('t3, t4')
            ->from('AcuerdosGestionBundle:AcuerdoPersona', 't3')
            ->innerJoin('t3.idPersona','t4')
        ;

        $listaacuerdopersona = new \Doctrine\Common\Collections\ArrayCollection();

        for ($i=0; $i<sizeof($acuerdos); $i++){
            $acuerdopersona = new StrAcuerdoPersona();
            $acuerdopersona->setAcuerdo($acuerdos[$i]);

            $query2->where('t3.idAcuerdo = :ID')
                ->setParameter('ID', $acuerdos[$i]->getId());
            $personas = $query2->getQuery()->getResult();
            $acuerdopersona->setPersonas($personas);
            $listaacuerdopersona[$i] = $acuerdopersona;
        }

        return $listaacuerdopersona;
    }

    public function findAcuerdosCompletosPdf($idProc){

//        $em = $this->getEntityManager();
//        $query = $em->createQueryBuilder();
//        $query2 = $em->createQueryBuilder();
//
//        $query->select('t1, t2')
//            ->from('AcuerdosGestionBundle:Acuerdo', 't1')
//            ->innerJoin('t1.idProcedencia', 't2')
//            ->where('t1.idProcedencia = :IDPROC')
//            ->orderBy('t1.' . $column, $order)
//            ->setFirstResult($first_result)->setMaxResults($max_result)
//            ->setParameter('IDPROC',$idProc)
//        ;
//
//        $acuerdos = $query->getQuery()->getResult();
//
//        $query2->select('t3, t4')
//            ->from('AcuerdosGestionBundle:AcuerdoPersona', 't3')
//            ->innerJoin('t3.idPersona','t4')
//        ;
//
//        $listaacuerdopersona = new \Doctrine\Common\Collections\ArrayCollection();
//
//        for ($i=0; $i<sizeof($acuerdos); $i++){
//            $acuerdopersona = new StrAcuerdoPersona();
//            $acuerdopersona->setAcuerdo($acuerdos[$i]);
//
//            $query2->where('t3.idAcuerdo = :ID')
//                ->setParameter('ID', $acuerdos[$i]->getId());
//            $personas = $query2->getQuery()->getResult();
//            $acuerdopersona->setPersonas($personas);
//            $listaacuerdopersona[$i] = $acuerdopersona;
//        }
//
//        return $listaacuerdopersona;
    }



}
